public struct PFThemeSD {
    public static let theme = ThemeSD(border: nil,
                                      color: makeColor(),
                                      elevation: nil,
                                      font: nil,
                                      size: nil)

    private static func makeColor() -> ThemeColorSD {
        let color = ThemeColorSD(brandPrimary: DesignSystemColorValue.PF.brandPrimary.uiColor,
                                 brandSecondaryBurgundy: DesignSystemColorValue.PF.brandSecondaryBurgundy.uiColor,
                                 brandSecondaryYellow: DesignSystemColorValue.PF.brandSecondaryYellow.uiColor,
                                 bgDark: DesignSystemColorValue.PF.bgDark.uiColor,
                                 bgLight: DesignSystemColorValue.PF.bgLight.uiColor,
                                 bgLightNeutral: DesignSystemColorValue.PF.bgLightNeutral.uiColor,
                                 bgLightWhite: DesignSystemColorValue.PF.bgLightWhite.uiColor,
                                 bgLightYellow: DesignSystemColorValue.PF.bgLightYellow.uiColor,
                                 neutral30: DesignSystemColorValue.PF.neutral30.uiColor,
                                 neutral40: DesignSystemColorValue.PF.neutral40.uiColor,
                                 neutral50: DesignSystemColorValue.PF.neutral50.uiColor,
                                 neutral70: DesignSystemColorValue.PF.neutral70.uiColor,
                                 neutral90: DesignSystemColorValue.PF.neutral90.uiColor,
                                 actionLightPrimaryMain: DesignSystemColorValue.PF.actionLightPrimaryMain.uiColor,
                                 actionLightPrimaryAuxiliary: DesignSystemColorValue.PF.actionLightPrimaryAuxiliary.uiColor,
                                 actionLightPrimaryState: DesignSystemColorValue.PF.actionLightPrimaryState.uiColor,
                                 actionDarkPrimaryMain: DesignSystemColorValue.PF.actionDarkPrimaryMain.uiColor,
                                 actionDarkPrimaryAuxiliary: DesignSystemColorValue.PF.actionDarkPrimaryAuxiliary.uiColor,
                                 actionDarkPrimaryState: DesignSystemColorValue.PF.actionDarkPrimaryState.uiColor,
                                 actionLightSecondaryMain: DesignSystemColorValue.PF.actionLightSecondaryMain.uiColor,
                                 actionLightSecondaryAuxiliary: DesignSystemColorValue.PF.actionLightSecondaryAuxiliary.uiColor,
                                 actionLightSecondaryState: DesignSystemColorValue.PF.actionLightSecondaryState.uiColor,
                                 actionDarkSecondaryMain: DesignSystemColorValue.PF.actionDarkSecondaryMain.uiColor,
                                 actionDarkSecondaryAuxiliary: DesignSystemColorValue.PF.actionDarkSecondaryAuxiliary.uiColor,
                                 actionDarkSecondaryState: DesignSystemColorValue.PF.actionDarkSecondaryState.uiColor,
                                 supportFeedbackAlertDark: DesignSystemColorValue.PF.supportFeedbackAlertDark.uiColor,
                                 supportFeedbackAlertLight: DesignSystemColorValue.PF.supportFeedbackAlertLight.uiColor,
                                 supportFeedbackAlertMedium: DesignSystemColorValue.PF.supportFeedbackAlertMedium.uiColor,
                                 supportFeedbackErrorDark: DesignSystemColorValue.PF.supportFeedbackErrorDark.uiColor,
                                 supportFeedbackErrorLight: DesignSystemColorValue.PF.supportFeedbackErrorLight.uiColor,
                                 supportFeedbackErrorMedium: DesignSystemColorValue.PF.supportFeedbackErrorMedium.uiColor,
                                 supportFeedbackInformationDark: DesignSystemColorValue.PF.supportFeedbackInformationDark.uiColor,
                                 supportFeedbackInformationLight: DesignSystemColorValue.PF.supportFeedbackInformationLight.uiColor,
                                 supportFeedbackInformationMedium: DesignSystemColorValue.PF.supportFeedbackInformationMedium.uiColor,
                                 supportFeedbackSuccessDark: DesignSystemColorValue.PF.supportFeedbackSuccessDark.uiColor,
                                 supportFeedbackSuccessLight: DesignSystemColorValue.PF.supportFeedbackSuccessLight.uiColor,
                                 supportFeedbackSuccessMedium: DesignSystemColorValue.PF.supportFeedbackSuccessMedium.uiColor,
                                 supportBalanceSuccess: DesignSystemColorValue.PF.supportBalanceSuccess.uiColor,
                                 supportBalanceNegative: DesignSystemColorValue.PF.supportBalanceNegative.uiColor)
        return color
    }
}
